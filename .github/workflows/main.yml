name: Node.js CI/CD Pipeline with Docker Hub

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  NODE_VERSION: "18"
  IMAGE_NAME: nodejs-demo-app

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: "nodejs-demo-app/package.json"

      - name: Install dependencies
        run: npm install
        working-directory: ./nodejs-demo-app

      - name: Run linter
        run: npm run lint
        working-directory: ./nodejs-demo-app

      - name: Run tests
        run: npm test
        working-directory: ./nodejs-demo-app

      - name: Build application
        run: npm run build
        working-directory: ./nodejs-demo-app

  docker-build:
    name: Build Docker Image
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (local)
        uses: docker/build-push-action@v5
        with:
          context: ./nodejs-demo-app
          file: ./nodejs-demo-app/Dockerfile
          push: false
          tags: nodejs-demo-app:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image locally
        run: |
          echo "ðŸ§ª Testing Docker image locally..."
          docker run -d -p 3000:3000 --name test-container nodejs-demo-app:latest
          sleep 10

          # Test health endpoint
          echo "Testing health endpoint..."
          curl -f http://localhost:3000/health || exit 1

          # Test main endpoint
          echo "Testing main endpoint..."
          curl -f http://localhost:3000/ || exit 1

          # Test API endpoint
          echo "Testing API endpoint..."
          curl -f http://localhost:3000/api/users || exit 1

          docker stop test-container
          docker rm test-container
          echo "âœ… All Docker tests passed!"

      - name: Success Summary
        run: |
          echo "ðŸŽ‰ CI/CD Pipeline completed successfully!"
          echo "âœ… Code quality checks passed"
          echo "âœ… Unit tests passed"
          echo "âœ… Docker build successful"
          echo "âœ… Application tested and working"
