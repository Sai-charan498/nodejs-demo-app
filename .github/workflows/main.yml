name: Node.js CI/CD Pipeline with Docker Hub

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  NODE_VERSION: "18"
  IMAGE_NAME: nodejs-demo-app

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: './nodejs-demo-app/package-lock.json'

      - name: Install dependencies
        run: npm ci
        working-directory: ./nodejs-demo-app

      - name: Run linter
        run: npm run lint
        working-directory: ./nodejs-demo-app

      - name: Run tests
        run: npm test
        working-directory: ./nodejs-demo-app

      - name: Build application
        run: npm run build
        working-directory: ./nodejs-demo-app

  build-and-push:
    name: Build & Push to Docker Hub
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.D }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./nodejs-demo-app
          file: ./nodejs-demo-app/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/nodejs-demo-app:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/nodejs-demo-app:${{ github.sha }}
          labels: |
            org.opencontainers.image.title=Node.js Demo App
            org.opencontainers.image.description=A simple Node.js Express application with CI/CD
            org.opencontainers.image.vendor=Sai Charan
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy Application
    needs: [test, build-and-push]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.D }}

      - name: Test Docker Hub image
        run: |
          echo "üß™ Testing Docker Hub image..."
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/nodejs-demo-app:latest
          docker run -d -p 3000:3000 --name test-container ${{ secrets.DOCKER_HUB_USERNAME }}/nodejs-demo-app:latest
          sleep 15
          
          # Test health endpoint
          echo "Testing health endpoint..."
          curl -f http://localhost:3000/health || exit 1
          
          # Test main endpoint
          echo "Testing main endpoint..."
          curl -f http://localhost:3000/ || exit 1
          
          # Test API endpoint
          echo "Testing API endpoint..."
          curl -f http://localhost:3000/api/users || exit 1
          
          docker stop test-container
          docker rm test-container
          echo "‚úÖ All deployment tests passed!"

      - name: Deployment Summary
        run: |
          echo "üöÄ Deployment completed successfully!"
          echo "üì¶ Docker Hub Image: ${{ secrets.DOCKER_HUB_USERNAME }}/nodejs-demo-app:latest"
          echo "üîó Pull command: docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/nodejs-demo-app:latest"
          echo "üèÉ Run command: docker run -p 3000:3000 ${{ secrets.DOCKER_HUB_USERNAME }}/nodejs-demo-app:latest"